<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIV8c/yNwJP8kcyX/JHMl/yRzJf8kcyX/JHMl/yRzJf8kcyX/JHMl/yRz
        Jf8kciT/I3Ik/yRzJf8kcyX/JHIk/yRyJP8kciT/JHIk/yRyJP8jbCP/IVwb/wAAAAAhXh3/LJ47/zPB
        U/8yvlH/Mr5R/zK+Uf8yvlH/Mr5R/zK+Uf8yvlH/MsBS/zG6TP8wvk//L7tN/y+7Tv8xvU//Mr5R/zK+
        Uf8yvlH/Mr5R/zK+Uf8zwVP/LJ87/yFcHP8kcCT/M8FU/zG5T/8xuU//MblP/zG5T/8xuU//MblP/zG5
        T/8xuU7/MbxP/yJvIf8llzX/KrRG/yqxRP8ttEn/MLdM/zG5Tv8xuU7/MblO/zG5Tv8xuk7/M8FS/yNv
        Jf8leCj/Mr9T/zG6UP8xulD/MbpQ/zG6UP8xulD/MbpQ/zG6UP8xuU//Mb1Q/yBrIf8VRRD/Hogs/yaw
        Qv8pr0T/LbRK/zC3Tf8xuU7/MblO/zG5Tv8xuU7/Mr5R/yV2Jv8meSn/MsBW/zG7U/8xulL/MbpS/zG6
        Uv8xulL/MbpS/zG6Uv8xulL/Mb5S/xtpHP97rnf/CToF/xyFKP8lsEL/KbFF/y21S/8wuE3/MblP/zG5
        T/8xuU//Mr5S/yV4J/8mfCr/MsBX/zG7VP8xu1T/MbtU/zG7VP8xu1P/MbtT/zG7U/8xu1P/MsBX/xVo
        Fv/w8+//7vTt/w1FCf8ZfST/JrJG/yuzSv8vt0//MbpQ/zG6UP8xulD/Mr9T/yZ5KP8mfir/MsJa/zLC
        Wf8yxFr/MsRY/zLEWP8yxFj/MsRY/zLEWP8yxFj/M8db/xVtGP/m7eb///////n6+v8NRgr/Gmke/yq6
        TP8uuFD/MLpS/zG7U/8xulL/Mr9V/yZ7Kf8mgSz/Mcdf/yV4J/8ZXRb/E1oP/xJZDv8SWQ7/EVYO/xFW
        Dv8RVQ7/EVYO/wVOAv/i7eL////////////5+vr/D04N/x12Iv8wwlb/MbtU/zG7VP8xu1T/MsBX/yZ8
        Kv8mgi3/M8lh/x98Jf+CuYL/7vTu/+jw6P/o8Oj/6PHo/+jx6P/o8Of/6PDn/+Pt4v/8/vz/////////
        ////////9/j4/zR4L/8efCX/MsVb/zG+V/8xvVb/MsJX/yZ/LP8jgyz/Mchj/xx7I/+lzaX/////////
        //////////////////////////////////////////////////////////////////81fjP/HWoc/zDB
        WP8wwFn/L8FZ/yN+Kf9br2j/LcZf/xd7IP+gyqH/////////////////////////////////////////
        ////////////////////////////////////////NoEz/xtsHP8uv1X/LsJc/1qsZf98wYn/gOGu/ziX
        RP+byJ//////////////////////////////////////////////////////////////////////////
        /////////////0CIPv9DkkT/hN6o/3/Ch/96wof/fd6t/2i2dv/I38n/////////////////////////
        /////////////////////////////////////////////////////////fv9/3atdP94wIX/hN+r/3rB
        h/96w4j/fOCr/2S3cv/C3Mb/////////////////////////////////////////////////////////
        ///////////////////6+vr/YqBi/2u6fP9/36n/g96r/3zCiP97xov/feCv/2a6d//C3Mb/////////
        //////////////////////////////////////////////////////////////r4+P9foWD/aLx9/3rc
        pf9/26f/g9+s/3zEiv97x4z/f+Ky/2q/f//P4tL/////////////////////////////////////////
        ////////////////////////+vr6/2KlZf9syIr/ed2n/37cqv+C3az/hOCv/3zGiv9+ypD/gOK3/3jJ
        iv9su3b/abl0/2y6d/9suXb/ZrVv/1+uaP9bqGH/V6Ze/0idU//l7OX////////////a6N3/ZKpn/23I
        jv953ar/f92t/4Lerf+D367/hOGw/3zHjv9+y5L/gOO2/37gtf984LT/feC2/3/htv994bX/et+y/3bd
        rv9y3Kv/bNyp/1azb//q8uv//////9ro2/9Wp1z/bM2S/3verP9/367/guCw/4Pgsf+D4LH/hOGy/33J
        kP9+zZX/geS6/4DiuP+A4rf/gOK1/4Ditv+A4LX/f+C0/33fsv9737D/dN2t/1u3cf/z9fH/2enZ/1Gm
        W/9rzZT/d92u/37fsv+A4LP/geC0/4Hgsv+D4LL/hOK0/33Kkf+Bz5b/geW9/4Hjuf+B47n/geK5/4Hi
        uf+B4rn/gOK4/4Dit/9/4bb/eOCz/2O+e/+t1rT/T6dc/2TNjv903a7/fN+y/4DhtP+B4bX/geG1/4Hg
        tf+B4LX/geK3/37MlP990Jr/gOa9/4Hku/+B5Lv/geS7/4Hku/+B5Lr/geS6/4Hjuv9/47r/e+K3/27I
        if9huHL/Zs+T/3Ldrv964LT/f+G3/4HiuP+B4rj/geK4/4HiuP+B4rj/geS4/4HOlv+B0Zj/gOfC/4Dl
        v/+A5b3/gOW9/4Dkvf+A5L3/gOS9/4Dkvf+A5L3/fuW6/3jQlP903Kv/dOCz/3vhtv9/47n/geS6/4Hk
        uv+B47r/geO6/4Hjuf+B47n/geS9/33Plv99zo//gd+0/4Dnwv+A5sD/gObA/4DmwP+A5sD/gObA/4Dm
        wP+A5sD/fufB/33lvf985r3/feW8/3/lvv9/5b//gOXA/4DlwP+A5cD/gOW9/4Dlvf+B5r//gd2w/4TO
        k/8AAAAAhdOY/4HVm/+B1p7/gdae/4HWnv+B1p7/gdae/4HWnv+B1p7/gdWe/4HVnv+B1Z7/gdWe/4HV
        nv+B1Z7/gdWd/4HVnf+B1Z3/gdSd/4HUnf+B05r/hdCX/wAAAACAAAEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAQA=
</value>
  </data>
</root>